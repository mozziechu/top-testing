1、单元测试
	1、单元测试是应用程序的最小可测试部分
	2、在面向过程编辑中，单元也可以是整个模块，但常见的是单个函数或过程。
	3、在面向对象编辑中，单元通常是整个接口，例如类，但可以是单独的方法。
	4、单元测试多数情况下是由程序员自己完成的。
2、模块测试
	1、首先，这段定义认为模块测试与单元测试有细微的区别。
	2、模块测试是针对具有明显的功能特征的代码块进行的测试。
	3、并且，它认为单元测试可能只涉及测试一小部分的功能。
	4、模块测试多数情况下由其他程序员或测试人员进行。

单元测试更强调的是程序的最小可测试单元；而且模块测试更强调所测试程序的功能完整性。

模块接口测试：这是一个口头概念。主要强调了被测试的模块有规范的输入和输出。这是一个可测试的模块最显著的特征之一。

《web接口开发与自动化测试》中的测试，所指向的就是对协议接口的测试。
接口的概念：
	程序接口：可以看作是程序模块接口，具体到程序中一般就是提供了输入输出的类或者方法。
		  对于程序接口的测试，一般需要使用与开发程序接口相同的编程语言，通过不同的传入、不同的参数，来验证程序接口的功能。
	协议接口：一般指系统通过不同协议来提供的接口，例如HTTP/SOAP协议等。这种类型接口对底层代码进行了封装，通过协议的方式对外提供调用。
		  因为不涉及到程序层面，所以不受编程语言的限制；我们可以通过其它编程语言或工具对其进行测试。

接口的分类：
	1、系统与系统之间的接口；              公司内部不同系统之间的接口调用，也可以不同公司之间系统接口的调用。
	2、下层服务对上层服务的接口；          mvc层级结构之间的通讯通过接口访问。应用层与service主要通过HTTP接口，service与DB层主要通过DAO数据库访问接口
	3、系统内，服务和服务之间的调用；      程序内部接口和接口直接的调用

接口测试的意义：
	1、更早的发现问题
	2、缩短产品研发周期
	3、发现更底层的问题
	4、检查服务器的异常处理能力

接口测试工具的不足：
	1、测试数据不可控制
	2、无法测试加密接口
	3、扩展能力不足

关于以上的几点不足，大多情况Robot Framework可以满足，然而Robot Framework的脚本难读是它最大的弱点。

一般接口工具测试过程：
	1、接口工具调用被测系统的接口。
	2、系统接口根据传参向正式数据库中查询数据。
	3、将查询结果组装成一定格式的数据，并返回给被调用者。
	4、人工过通过工具的断言功能检查接口测试的正确性。

我们设计的接口自动化测试项目，为了使几口测试对数据变的可控，测试过程如下：
	1、接口测试项目先向测试数据库中插入测试数据（zhangsan的个人信息）。
	2、调用被测系统接口（传参username=“zhangsan”）。
	3、系统接口根据传参向测试数据库进行查询并得到zhangsan的个人信息。
	4、将查询结果组装成一定格式的数据、并返回给被调者。
	5、通过单元测试框架断言接口返回的数据，并生成测试报告